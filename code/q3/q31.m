clc; clear; close all;
% 给定投资金额，规划投资计划，求得最大GDP值
%% 导入各个产业的拟合函数
% 定义变量
syms I2 I3 I4 I5 I6 I7 I8 I9 I10

GDP2 = 1.66 * I2 + 23419.39; % GDP2 函数
GDP3 = 40290.48 * I3^2 + 1.17 * I3 - 9.35e-7; % GDP3 函数
GDP4 = 46808.84 * exp(1.54e6 * I4) - 66777.28 * exp(5.57e-4 * I4); % GDP4 函数
GDP5 = -160800.24 * exp(1.83e-4 * I5) + 133611.89 * exp(2.44e-5 * I5); % GDP5 函数
GDP6 = 8147.80 * I6^2 + 0.28 * I6 + 3.86e-6; % GDP6 函数
GDP7 = 3711.69 * I7^2 + 0.35 * I7 + 2.88e-4; % GDP7 函数
GDP8 = 5.54e8 * exp(-6.69e-4 * I8) - 5.54e8 * exp(-6.70e-4 * I8); % GDP8 函数
GDP9 = -518.15 * I9^2 + 0.45 * I9 - 6.46e-7; % GDP9 函数
GDP10 = 205295.60 * exp(2.83e-7 * I10) - 190772.57 * exp(-9.04e-6 * I10); % GDP10 函数

% 单位投资（亿元）的回报率
S = [12.9983654483323, 0.636020380770955, 5.88642340151705, 6.00970398680209, 0.510267404135663, 2.22567840375023, 67.4657142638317, 0.288901095708213, 0.569974325583096];

%% 对数化与线性化
syms x3 x6 x7 x9
GDP_2 = 1.66 * I2 + 23419.39;

GDP_3 = 40290.48 * x3 + 1.17 * I3 - 9.35e-7;

GDP_4 = log(46808.84) + 1.54e6 * I4 - log(66777.28) + 5.57e-4 * I4;

GDP_5 = log(-160800.24) + 1.83e-4 * I5 + log(133611.89) + 2.44e-5 * I5;

GDP_6 = 8147.80 * x6 + 0.28 * I6 + 3.86e-6;

GDP_7 = 3711.69 * x7 + 0.35 * I7 + 2.88e-4;

GDP_8 = log(5.54e8) - 6.69e-4 * I8 + log(5.54e8) - 6.70e-4 * I8;

GDP_9 = -518.15 * x9 + 0.45 * I9 - 6.46e-7;

GDP_10 = log(205295.60) + 2.83e-7 * I10 - log(190772.57) - 9.04e-6 * I10;

%% 线性规划

%% 定义投资金额的上下限（线性化后的投资金额）
% 投资金额变量
I = [I2, I3, I4, I5, I6, I7, I8, I9, I10];

% 线性化后的目标函数系数
c = [1.66, 40290.48, log(46808.84) + 1.54e6, log(-160800.24) + 1.83e-4, 8147.80, 3711.69, log(5.54e8) - 6.69e-4, -518.15, log(205295.60) + 2.83e-7];

% 线性化后的约束条件
A = ones(1, 9); % 总和限制： I2 + I3 + ... + I10 <= 10000
b = 10000;

lb = [2, 3, 4, 5, 6, 7, 8, 9, 10]; % 每个投资的最小值

% 线性规划求解
options = optimset('Display','off'); % 不显示优化过程
[x, fval] = linprog(-c, [], [], A, b, lb, [], options); % 目标函数是最大化，所以使用 -c

% 输出结果
disp('Optimal investment distribution (I2 to I10):');
disp(x);
disp('Maximum GDP value:');
disp(-fval); % 最大GDP值